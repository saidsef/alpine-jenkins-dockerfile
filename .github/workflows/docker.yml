---
name: Docker Image CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 7 * */1 1'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set Tag Name
      run: |
        echo "TAG=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        echo "BUILD_ID=$(git log -1 --pretty=format:%ad --date=format:%Y.%m)" >> $GITHUB_ENV
        echo "DATE=$(echo date +'%Y.%m')" >> $GITHUB_ENV
    - name: Build docker image
      run: |
        docker build --build-arg BUILD_ID="${{ env.BUILD_ID }}" -t docker.io/saidsef/alpine-jenkins-dockerfile:${{ env.TAG == 'master' && 'latest' || env.TAG }} .
    - name: Create tag
      uses: actions/github-script@v3
      if: ${{ github.event.pull_request.merged == 'true' }}
      with:
        github-token: ${{ github.token }}
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ env.DATE }}",
            sha: context.sha
          })
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: docker.io/saidsef/alpine-jenkins-dockerfile:${{ env.TAG == 'master' && 'latest' || env.TAG }}
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push docker image
      run: |
        docker push docker.io/saidsef/alpine-jenkins-dockerfile:${{ env.TAG == 'master' && 'latest' || env.TAG }}
    - name: Schedule - Push docker image
      if: ${{ github.event_name == 'schedule' }}
      run: |
        docker tag docker.io/saidsef/alpine-jenkins-dockerfile:${{ env.TAG == 'master' && 'latest' || env.TAG }} docker.io/saidsef/alpine-jenkins-dockerfile:${{ env.BUILD_ID }}
        docker push docker.io/saidsef/alpine-jenkins-dockerfile:${{ env.BUILD_ID }}
